# -*- coding: utf-8 -*-

# VISIBILITY = {
#     '': ['Admin'],
#     'CyberFilms':['Reponses','Admin'],
#     'CyberFrais':['Questions'],
#     'CyberCadeaux':['Questions'],
# }
#
# for case, prefixes in VISIBILITY.iteritems():
#     for prefix in prefixes:
#         tags.add(prefix+case)




import sys
import os



import os.path
CONF_DIR = os.path.dirname(os.path.realpath(__file__))
PROJECT_DIR = os.path.join(CONF_DIR,'..','..')
TOP_PROJECTS_DIR = os.path.realpath(os.path.join(PROJECT_DIR,'..'))
TOP_ORG_DIR = os.path.realpath(os.path.join(TOP_PROJECTS_DIR,'..'))
SCRIBES_INFRA_DIR = os.path.realpath(os.path.join(TOP_ORG_DIR,'ScribesZone','ScribesInfra'))
SPHINX_ZONE_DIR = os.path.realpath(os.path.join(TOP_ORG_DIR,'ScribesZone','SphinxZone'))
if not os.path.isdir(SCRIBES_INFRA_DIR):
    print 'FATAL ERROR: directory %s does not exist' % SCRIBES_INFRA_DIR
    print '             Install ScribesInfra with git clone https//github.com/ScribesZone/ScribesInfa'
    raise EnvironmentError('ScribesInfra not found. See message above.')
sys.path.insert(0, '.')
sys.path.insert(0, CONF_DIR)
sys.path.insert(0, SCRIBES_INFRA_DIR)
sys.path.insert(0, os.path.join(SCRIBES_INFRA_DIR,'libs'))
sys.path.insert(0, SPHINX_ZONE_DIR)
sys.path.insert(0, os.path.join(SPHINX_ZONE_DIR,'libs'))


sys.path.insert(0, os.path.join(os.path.abspath(CONF_DIR), '..'))
sys.path.insert(0, os.path.join(os.path.abspath(CONF_DIR), '..', 'libs'))
sys.path.insert(0, os.path.abspath(os.path.join(CONF_DIR, 'extensions')))




# -- General configuration ------------------------------------------------


extensions = [
    # 'sphinxgithub',         # %JFE+=
    # 'sphinx_git',           # %JFE+=
    # 'sphinxdata',           # %JFE+=
    # 'sphinxse',             # %JFE+=
    # 'sphinxxrefs',          # %JFE+=
    # 'sphinxuseocl',
    # 'sphinx.ext.autodoc',
    # 'sphinx.ext.doctest',
    # 'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    # 'sphinx.ext.coverage',
    # 'sphinx.ext.mathjax',
    # 'sphinx.ext.ifconfig',
    #'sphinx.ext.viewcode',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = [CONF_DIR + os.sep + 'templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Le jeu du promoteur'
copyright = u'Public Domain'
author = u'xyz'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = 'Ville de Melahan'
# The full version, including alpha/beta/rc tags.
release = 'Ville de Melahan'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'fr'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# %JFE+[
exclude_patterns = [
    '.infra',
    'README.rst',
    '**/.build/*.generated.rst',
    '**/classroom-root/**',
    'demos']
# %JFE+]
# The reST default role (used for this markup: `text`) to use for all
# documents.
default_role = 'any' #  %JFE~=

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
keep_warnings = True #  %JFE~=

nitpicky = True #  %JFE+=  Does not seems to have an effect


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# %JFE+[
# html_theme = 'default'


# read the docs theme.
# see https://github.com/snide/sphinx_rtd_theme

on_rtd = os.environ.get('READTHEDOCS', None) == 'True'
local = not on_rtd
if local:
    tags.add('local')
else:
    tags.add('rtd')
    tags.add('RTD')
    tags.add('ReadTheDocs')
todo_include_todos = local
web = on_rtd
if local:  # only import and set the theme if we're building docs locally
    import sphinx_rtd_theme

    html_theme = 'sphinx_rtd_theme'
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
    #local = True
    #web = False
    rst_prolog = """
.. |L| replace::
    local
"""
else:
    rst_prolog = """
.. |L| replace::

"""


# otherwise, readthedocs.org uses their theme by default, so no need to specify it


# %JFE+]
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "Meylan"

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [os.path.join(CONF_DIR, 'static')]

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = True
display_github = True
# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = False

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
html_search_language = 'fr'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
#html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#html_search_scorer = 'scorer.js'



# Example configuration for intersphinx: refer to the Python standard library.
# intersphinx_mapping = {'https://docs.python.org/': None}
